/**
 * This plugin provides access to Moodle data in form of analytics and reports in real time.
 *
 *
 * @package    local_intelliboard
 * @copyright  2019 IntelliBoard, Inc
 * @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 * @website    https://www.intelliboard.net/
 */
define("local_intelliboard/account_setup",["jquery","core/ajax","core/log"],(function($,ajax,log){const ASValidator={required:input=>input.value.length>0,email:input=>/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(input.value),tel:input=>/^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\s\./0-9]*$/.test(input.value),validate:input=>{if(input.required)return"function"==typeof ASValidator[input.type]?ASValidator[input.type](input):ASValidator.required(input)}},AccountSetup={forms:["getstartedform","accountform","accounttypeform","usertypeform"],validator:ASValidator,usertype:[],init:setup=>{1==setup?AccountSetup.forms=["getstartedform","thanksform"]:(AccountSetup.initFormValidation("accountform"),AccountSetup.initFormValidation("accounttypeform"),AccountSetup.initAccountTypeSelection(),AccountSetup.initUserTypeSelection(),AccountSetup.setupSubmitAction()),AccountSetup.initNextAction(),AccountSetup.initPrevAction()},getPrevForm:currentForm=>{let pos=AccountSetup.forms.indexOf(currentForm),prevForm=AccountSetup.forms[pos-1];return!!prevForm.length&&prevForm},getNextForm:currentForm=>{let pos=AccountSetup.forms.indexOf(currentForm),nextForm=AccountSetup.forms[pos+1];return!!nextForm.length&&nextForm},toggleForms:(showForm,hideForm)=>{document.getElementById(hideForm).classList.add("intelliboard-hide"),document.getElementById(showForm).classList.remove("intelliboard-hide")},getFormInputs:formId=>document.getElementById(formId).querySelectorAll("input, select"),setValidationState:(input,valid)=>{valid?(input.classList.remove("is-invalid"),input.classList.add("is-valid")):(input.classList.remove("is-valid"),input.classList.add("is-invalid"))},initValidationAction:inputs=>{inputs.forEach((input=>{if(input.required){let event="input";"select"===input.type&&(event="change"),input.addEventListener(event,(function(){AccountSetup.setValidationState(input,AccountSetup.validator.validate(input))}))}}))},setHelpTextState:(formId,visible)=>{let helptext=document.getElementById(formId).getElementsByClassName("form-help-text")[0];helptext&&(visible?helptext.classList.replace("invisible","visible"):helptext.classList.replace("visible","invisible"))},setNextButtonState:(formId,disabled)=>{let nextbutton=document.getElementById(formId).getElementsByClassName("next-btn")[0];nextbutton&&(nextbutton.disabled=disabled,AccountSetup.setHelpTextState(formId,disabled))},isFormValid:formId=>{let formInputs=AccountSetup.getFormInputs(formId);for(let i=0;i<formInputs.length;i++)if(formInputs[i].required&&!AccountSetup.validator.validate(formInputs[i]))return!1;return!0},initFormValidation:formId=>{let formInputs=AccountSetup.getFormInputs(formId);AccountSetup.initValidationAction(formInputs);for(let i=0;i<formInputs.length;i++){let event="input";"select"===formInputs[i].type&&(event="change"),formInputs[i].addEventListener(event,(function(){AccountSetup.setNextButtonState(formId,!AccountSetup.isFormValid(formId))}))}},initNextAction:()=>{document.getElementsByClassName("next-btn").forEach((button=>{button.addEventListener("click",(function(){let currentform=this.getAttribute("data-form"),nextform=AccountSetup.getNextForm(currentform);AccountSetup.toggleForms(nextform,currentform);let inputs=AccountSetup.getFormInputs(nextform);return inputs[0]&&inputs[0].dispatchEvent(new Event("input")),!1}),!1)}))},initPrevAction:()=>{document.getElementsByClassName("prev-btn").forEach((button=>{button.addEventListener("click",(function(){let currentform=this.getAttribute("data-form"),prevform=AccountSetup.getPrevForm(currentform);return AccountSetup.toggleForms(prevform,currentform),!1}),!1)}))},initAccountTypeSelection:()=>{let accounttypes=document.getElementsByClassName("accounttype");for(var i=0;i<accounttypes.length;i++)accounttypes[i].addEventListener("click",(function(){accounttypes.forEach((element=>{element.classList.remove("active"),element.setAttribute("aria-pressed","false")})),this.classList.add("active"),this.setAttribute("aria-pressed","true");let accounttype=this.getAttribute("data-accounttype"),input=document.getElementById("accounttype");return input.value!=accounttype&&AccountSetup.setupUserTypeForm(accounttype),input.value=accounttype,input.dispatchEvent(new Event("input")),!1}),!1)},setupUserTypeForm:accounttype=>{AccountSetup.usertype=[],document.getElementsByClassName("usertype").forEach((ut=>{ut.classList.remove("active"),ut.setAttribute("aria-pressed","false")})),document.getElementById("submitdata").disabled=!0,document.getElementsByClassName("intelliboard-user-types").forEach((form=>{form.id===accounttype?form.classList.remove("intelliboard-hide"):form.classList.add("intelliboard-hide")}))},initUserTypeSelection:()=>{let usertypes=document.getElementsByClassName("usertype");for(var i=0;i<usertypes.length;i++)usertypes[i].addEventListener("click",(function(){let val=this.getAttribute("data-usertype");AccountSetup.usertype.indexOf(val)>=0?(AccountSetup.usertype.splice(AccountSetup.usertype.indexOf(val),1),this.classList.remove("active"),this.setAttribute("aria-pressed","false")):(AccountSetup.usertype.push(val),this.classList.add("active"),this.setAttribute("aria-pressed","true"));let isFormValid=AccountSetup.usertype.length>0;return document.getElementById("submitdata").disabled=!isFormValid,AccountSetup.setHelpTextState("usertypeform",!isFormValid),!1}),!1)},setupSubmitAction:()=>{document.getElementById("submitdata").addEventListener("click",(event=>{let forms=document.getElementsByClassName("intelliboard-splash-page"),data={};data.usertype=AccountSetup.usertype.toString(),forms.forEach((form=>{form.querySelectorAll("input, select").forEach((input=>{data[input.name]=input.value})),"thanksform"===form.id?form.classList.remove("intelliboard-hide"):form.classList.add("intelliboard-hide")})),AccountSetup.sendData(data)}),!1)},sendData:data=>{ajax.call([{methodname:"local_intelliboard_account_setup",args:{params:data}}])}};return AccountSetup}));

//# sourceMappingURL=account_setup.min.js.map